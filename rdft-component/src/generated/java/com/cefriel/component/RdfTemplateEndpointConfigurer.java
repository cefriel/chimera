/* Generated by camel build tools - do NOT edit this file! */
package com.cefriel.component;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class RdfTemplateEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        RdfTemplateEndpoint target = (RdfTemplateEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "basepath":
        case "basePath": target.setBasePath(property(camelContext, java.lang.String.class, value)); return true;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionhandler":
        case "exceptionHandler": target.setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern":
        case "exchangePattern": target.setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "filename": target.setFilename(property(camelContext, java.lang.String.class, value)); return true;
        case "format": target.setFormat(property(camelContext, java.lang.String.class, value)); return true;
        case "keyvaluecsvpath":
        case "keyValueCsvPath": target.setKeyValueCsvPath(property(camelContext, java.lang.String.class, value)); return true;
        case "keyvaluepairspath":
        case "keyValuePairsPath": target.setKeyValuePairsPath(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "queryfilepath":
        case "queryFilePath": target.setQueryFilePath(property(camelContext, java.lang.String.class, value)); return true;
        case "rdfbaseconfig":
        case "rdfBaseConfig": target.setRdfBaseConfig(property(camelContext, com.cefriel.component.RdfTemplateBean.class, value)); return true;
        case "stream": target.setStream(property(camelContext, boolean.class, value)); return true;
        case "templatepath":
        case "templatePath": target.setTemplatePath(property(camelContext, java.lang.String.class, value)); return true;
        case "trimtemplate":
        case "trimTemplate": target.setTrimTemplate(property(camelContext, boolean.class, value)); return true;
        case "utils": target.setUtils(property(camelContext, com.cefriel.template.utils.TemplateUtils.class, value)); return true;
        case "verbosequeries":
        case "verboseQueries": target.setVerboseQueries(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "basepath":
        case "basePath": return java.lang.String.class;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": return boolean.class;
        case "exceptionhandler":
        case "exceptionHandler": return org.apache.camel.spi.ExceptionHandler.class;
        case "exchangepattern":
        case "exchangePattern": return org.apache.camel.ExchangePattern.class;
        case "filename": return java.lang.String.class;
        case "format": return java.lang.String.class;
        case "keyvaluecsvpath":
        case "keyValueCsvPath": return java.lang.String.class;
        case "keyvaluepairspath":
        case "keyValuePairsPath": return java.lang.String.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "queryfilepath":
        case "queryFilePath": return java.lang.String.class;
        case "rdfbaseconfig":
        case "rdfBaseConfig": return com.cefriel.component.RdfTemplateBean.class;
        case "stream": return boolean.class;
        case "templatepath":
        case "templatePath": return java.lang.String.class;
        case "trimtemplate":
        case "trimTemplate": return boolean.class;
        case "utils": return com.cefriel.template.utils.TemplateUtils.class;
        case "verbosequeries":
        case "verboseQueries": return boolean.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        RdfTemplateEndpoint target = (RdfTemplateEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "basepath":
        case "basePath": return target.getBasePath();
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": return target.isBridgeErrorHandler();
        case "exceptionhandler":
        case "exceptionHandler": return target.getExceptionHandler();
        case "exchangepattern":
        case "exchangePattern": return target.getExchangePattern();
        case "filename": return target.getFilename();
        case "format": return target.getFormat();
        case "keyvaluecsvpath":
        case "keyValueCsvPath": return target.getKeyValueCsvPath();
        case "keyvaluepairspath":
        case "keyValuePairsPath": return target.getKeyValuePairsPath();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "queryfilepath":
        case "queryFilePath": return target.getQueryFilePath();
        case "rdfbaseconfig":
        case "rdfBaseConfig": return target.getRdfBaseConfig();
        case "stream": return target.isStream();
        case "templatepath":
        case "templatePath": return target.getTemplatePath();
        case "trimtemplate":
        case "trimTemplate": return target.isTrimTemplate();
        case "utils": return target.getUtils();
        case "verbosequeries":
        case "verboseQueries": return target.isVerboseQueries();
        default: return null;
        }
    }
}

