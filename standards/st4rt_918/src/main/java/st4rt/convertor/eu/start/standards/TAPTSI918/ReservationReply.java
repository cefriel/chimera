//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.28 at 11:44:46 AM CEST 
//


package st4rt.convertor.eu.start.standards.TAPTSI918;

import st4rt.convertor.empire.annotation.*;

import javax.xml.bind.annotation.*;


/**
 * <p>Java class for anonymous complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Requestor" type="{http://www.uic-asso.fr/xml/passenger/reservation/01}RequestorType"/>
 *         &lt;element name="Dialogue" type="{http://www.uic-asso.fr/xml/passenger/reservation/01}DialogueType"/>
 *         &lt;choice>
 *           &lt;element name="Allocation" type="{http://www.uic-asso.fr/xml/passenger/reservation/01}AllocationType"/>
 *           &lt;element name="NegativeReply" type="{http://www.uic-asso.fr/xml/passenger/reservation/01}NegativeReplyType"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="InformationOnly" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
        "requestor",
        "dialogue",
        "allocation",
        "negativeReply"
})
@XmlRootElement(name = "ReservationReply")
@NamedGraph(type = NamedGraph.NamedGraphType.Static)
@Namespaces({
        "st4rt","http://st4rt.eu/ontologies/st4rt#",
        "it2r","http://it2rail.eu/ontology#",
        "foaf","http://xmlns.com/foaf/0.1#",
        "dbp", "http://dbpedia.org/property#",
        "xmlschema", "http://www.w3.org/2001/XMLSchema#",
        "customer", "http://www.it2rail.eu/ontology/customer#",
        "travel", "http://www.it2rail.eu/ontology/travel#",
        "transport", "http://www.it2rail.eu/ontology/transport#",
        "shopping", "http://www.it2rail.eu/ontology/shopping#",
        "product", "http://www.it2rail.eu/ontology/product#",
        "infrastructure", "http://www.it2rail.eu/ontology/infrastructure#",
        "reservationsystems", "http://st4rt.eu/ontologies/reservationsystems#",
        "mobility", "http://www.it2rail.eu/ontology/mobility#"})
@RdfsClass("st4rt:ProvisionalBookingReplyMessage")
@Queries({
        @Query(name = "918_LF_Currency") ,
        @Query(name = "918_LF_CodingSystem"),
        @Query(name = "918_LF_PassengerData"),
        // @Query(name= "918_LF_FareType")
        // ,
        // @Query(name = "918_LF_Reply_AccommodationType")
})
public class ReservationReply implements SupportsRdfId {

    @XmlTransient
    private SupportsRdfId mIdSupport = new SupportsRdfIdImpl();

    public RdfKey getRdfId() {
        return mIdSupport.getRdfId();
    }

    public void setRdfId(RdfKey theId) {
        mIdSupport.setRdfId(theId);
    }

    @XmlElement(name = "Requestor", required = true)
    @RdfProperty(propertyName = "st4rt:hasRequestor")
    protected RequestorType requestor;
    @XmlElement(name = "Dialogue", required = true)
    protected DialogueType dialogue;
    @XmlElement(name = "Allocation")
    protected AllocationType allocation;
    @XmlElement(name = "NegativeReply")
    @RdfProperty(propertyName = "st4rt:hasNegativeReply")
    protected NegativeReplyType negativeReply;
    @XmlAttribute(name = "InformationOnly")
    protected Boolean informationOnly;

    /**
     * Gets the value of the requestor property.
     *
     * @return
     *     possible object is
     *     {@link RequestorType }
     *
     */
    public RequestorType getRequestor() {
        return requestor;
    }

    /**
     * Sets the value of the requestor property.
     *
     * @param value
     *     allowed object is
     *     {@link RequestorType }
     *
     */
    public void setRequestor(RequestorType value) {
        this.requestor = value;
    }

    /**
     * Gets the value of the dialogue property.
     *
     * @return
     *     possible object is
     *     {@link DialogueType }
     *
     */
    public DialogueType getDialogue() {
        return dialogue;
    }

    /**
     * Sets the value of the dialogue property.
     *
     * @param value
     *     allowed object is
     *     {@link DialogueType }
     *
     */
    public void setDialogue(DialogueType value) {
        this.dialogue = value;
    }

    /**
     * Gets the value of the allocation property.
     *
     * @return
     *     possible object is
     *     {@link AllocationType }
     *
     */
    public AllocationType getAllocation() {
        return allocation;
    }

    /**
     * Sets the value of the allocation property.
     *
     * @param value
     *     allowed object is
     *     {@link AllocationType }
     *
     */
    public void setAllocation(AllocationType value) {
        this.allocation = value;
    }

    /**
     * Gets the value of the negativeReply property.
     *
     * @return
     *     possible object is
     *     {@link NegativeReplyType }
     *
     */
    public NegativeReplyType getNegativeReply() {
        return negativeReply;
    }

    /**
     * Sets the value of the negativeReply property.
     *
     * @param value
     *     allowed object is
     *     {@link NegativeReplyType }
     *
     */
    public void setNegativeReply(NegativeReplyType value) {
        this.negativeReply = value;
    }

    /**
     * Gets the value of the informationOnly property.
     *
     * @return
     *     possible object is
     *     {@link Boolean }
     *
     */
    public boolean isInformationOnly() {
        if (informationOnly == null) {
            return false;
        } else {
            return informationOnly;
        }
    }

    /**
     * Sets the value of the informationOnly property.
     *
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *
     */
    public void setInformationOnly(Boolean value) {
        this.informationOnly = value;
    }

}
